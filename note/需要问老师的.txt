需要问老师的:

*******************************************************************************************
*******************************************************************************************
*******************************************************************************************

    java bean 到底什么概念????

*******************************************************************************************
*******************************************************************************************
*******************************************************************************************

    int类型是继承Object类吗?        
    （1）在Java中是使用泛型来约束HashMap中的key和value的类型的，
    即HashMap<K, V>；而泛型在Java的规定中必须是对象Object类型的，
    也就是说HashMap<K, V>可以理解为HashMap<Object,Object>，很显然基本数据类型不是Object类型的，
    因此不能作为键值，只能是引用类型。虽然我们在HashMap中可以这样添加数据：“map.put(1, “Java”)；”，
    但实际上是将其中的key值1进行了自动装箱操作，变为了Integer类型。

*******************************************************************************************
*******************************************************************************************
*******************************************************************************************


问题:为什么会报错
    class Aaa{
    int iii;
    public void Sss(){
        int bbb;
        System.out.println(bbb + 1);
    }
}

*******************************************************************************************
*******************************************************************************************
*******************************************************************************************

java 获取执行java文件目录


*******************************************************************************************
*******************************************************************************************
*******************************************************************************************

为什么匹配出来只有两个? 正则表达式测试网站都测试好几个的

https://c.runoob.com/front-end/854

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>菜鸟教程(runoob.com)</title>
</head>
<body>
BCDEF 或者 CDE	
	<br><br>
<script>
var str = "ABCDEFG ABCDEFG ABCDEFG ABCDEFG ABCDEFG";
var patt1 = /(B.+?E)/;
arr = str.match(patt1);
document.write(arr);
document.write("<br>********************************");
for (var i = 0; i < arr.length ; i++) {
	document.write("<br>-------------------<br>");
    document.write(arr[i]);

}
</script>

</body>
</html>


已经解决!!!
        原来 g跟没有g的区别了，g代表全局搜索
解决方案: 末尾加上g        
        var patt1 = /(B.+?E)/g;


*******************************************************************************************
*******************************************************************************************
*******************************************************************************************

为什么匹配出来只有两个? 正则表达式测试网站都测试好几个的

    @Test
    public void Test() {
        String phonrNul = "我的电话号码是123456789 , 地方north of school , 我的另外一个号码是54321";
        Pattern compile = Pattern.compile("\\d+");
        Matcher matcher = compile.matcher(phonrNul);
        System.out.println(matcher);
        if(matcher.find()){
            System.out.println("lllllllllll:==>  " + matcher.group());
            System.out.println("wwwwwwwwwww:{}" + matcher.group(1));
        }
    }

    已经解决:
            if 换成 while , 循环遍历输出!

*******************************************************************************************
*******************************************************************************************
*******************************************************************************************


addEventListener 关于 this 怎么获取

*******************************************************************************************
*******************************************************************************************
*******************************************************************************************

序列化 是什么

*******************************************************************************************
*******************************************************************************************
*******************************************************************************************

正则表达式 中的 [] ()
[0-9]


*******************************************************************************************
*******************************************************************************************
*******************************************************************************************

        char c = 89;
        System.out.println(c);
        输出 : Y

*******************************************************************************************
*******************************************************************************************
*******************************************************************************************


*******************************************************************************************
*******************************************************************************************
*******************************************************************************************


*******************************************************************************************
*******************************************************************************************
*******************************************************************************************

