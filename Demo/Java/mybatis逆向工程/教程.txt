
-------------------------------------------------------------------------------

   // 自定义查询条件 - 查询所有
   @Test
   public void selectAll() throws IOException {
       SqlSession sqlSession = get_SqlSession();
       UserTMapper userTMapper = sqlSession.getMapper(UserTMapper.class);

       List<UserT> list = userTMapper.selectByExample(null);  //  null 就是查询所有
       for(UserT userT : list){
           System.err.println(userT.getUsername());
           System.err.println(userT.getPassword());
           System.out.println("--------------------------------------");
       }
   }

-----------------  mybatis generiator 逆向工程 教程 -------------------------------------
https://blog.csdn.net/thedarkclouds/article/details/82384606

UserExample example = new UserExample();

Criteria criteria = example.createCriteria();
criteria.andUsernameEqualTo("wyw");
criteria.andUsernameIsNull();

example.setOrderByClause("username asc,email desc");
List<?>list = XxxMapper.selectByExample(example);

//相当于：select * from user where username = 'wyw' and  username is null order by username asc,email desc



-------------------------------------------------------------------------------------------
  // 自定义查询条件 -  WHERE ( price between ? and ? )
    @Test
    public void andXxxxxBetween() throws Exception {
	
        SqlSession sqlSession = get_SqlSession();
        BookInfoMapper bookInfoMapper = sqlSession.getMapper(BookInfoMapper.class);

        BookInfoExample example = new BookInfoExample();
        BookInfoExample.Criteria criteria = example.createCriteria();
        criteria.andPriceBetween(new BigDecimal(600) , new BigDecimal(800));

        List<BookInfo> list = bookInfoMapper.selectByExample(example);

        for(BookInfo bookInfo : list){
            System.err.println(bookInfo.getPrice());
            System.err.println(bookInfo.getName());
            System.out.println("\n--------------------------------------\n");
            Thread.sleep(10);
        }
    }
	

-------------------------------------------------------------------------------------------


填坑笔记:
            逆向工程
pom.xml文件添加:
https://blog.csdn.net/jxm007love/article/details/78861759
异常: org.apache.ibatis.binding.BindingException: Invalid bound statement (not found)


-------------------------------------------------------------------

	<build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>

            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
        </resources>
    </build>
	
-------------------------------------------------------------------




pom.xml
------------------------------------------------------------------
        <!-- MyBatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.4.5</version>
        </dependency>
		
        <!-- MyBati Generator逆向工程（代码生成器） -->
        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.5</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.30</version>
        </dependency>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>




需要把 src\main\resources 设置成为资源目录(Sources Root)
        //读取MyBatis的全局配置文件
        //  一定要把 resources 文件成为 Sources Root 文件夹   切记切记 !!!!!
        String resource = "mybatis-config.xml";



-------------------------------------------------------------------------------------------

	模糊查询
       SqlSession sqlSession = get_SqlSession();
       UserTMapper userTMapper = sqlSession.getMapper(UserTMapper.class);

       UserTExample userTExample = new UserTExample();
       UserTExample.Criteria criteria = userTExample.createCriteria();

       // 注意!!  查询的关键字需要加上 % % 才可以拼接成功 (模糊查询)
       criteria.andUsernameLike("%ja%");
       List<UserT> list = userTMapper.selectByExample(userTExample);
       for(UserT userT : list){
           System.err.println(userT.getUsername());
           System.err.println(userT.getPassword());
           System.out.println("--------------------------------------");
       }


-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------






-------------------------------------------------------------------------------------------




-------------------------------------------------------------------------------------------




	
	