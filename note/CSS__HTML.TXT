x[i].style.width = "100px";
x[i].style.height = "100px";
与
x[i].style.cssText = "width:100px;height:100px!important;"
两种方法上的差异是什么呢？重新渲染页面次数上的差异
前者2次，而后者1次
试想一下当属性增加到更多的时候，性能差异也就上去了

***************************************************************************

    position: relative;   相对于自身进行定位,设置偏移量

***************************************************************************

如果是需要 在网页里面显示html代码的话: pre和code都不管用
用 xmp才可以

<xmp style="font-size: 36px; font-weight: 800; " >
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<meta http-equiv="X-UA-Compatible" content="ie=edge">
	表示支持移动端网页
</xmp>


***************************************************************************

head里面记得加上这个:
		<meta charset="UTF-8">
		<meta name="viewport" content="width=device-width, initial-scale=1.0">
		<meta http-equiv="X-UA-Compatible" content="ie=edge">
        表示支持移动端


***************************************************************************
li
            width: 33.33%;
            float: left;
            text-align: center;
这样子, 哪怕屏幕压缩的再小, li*3 也会保持在同一行, 不会转向第二行

***************************************************************************

我们在移动端开发时，在<head>标签中加入

<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
这句话帮我们解决了很多问题，我们只要按照设备物理像素的大小来进行开发就行了。

***************************************************************************
文档教程:  https://developer.mozilla.org/zh-CN/docs/Web/CSS/position
position: absolute :
	是根据网页的最顶端进行定位
	但是!!! 
	如果父元素加上了position: absolute(或者是relative),
	那么就根据父元素进行定位
	不为元素预留空间, 直接脱离文档流

position: relative:
	是根据自己本身进行定位
	但是不会脱离文档流,也就是说,原来的位置还在
	在不改变页面布局的前提下调整元素位置（因此会在此元素未添加定位时所在位置留下空白）

position: fixed
	是根据浏览器的窗口进行定位, 固定定位, 元素的位置在屏幕滚动时不会改变

***************************************************************************

一个元素加上 position: relative 可以用  margin: 0 auto;
但是: 
position: absolute 就不可以用 margin: 0 auto;

***************************************************************************
子元素设置了position: absolute 无法设置 max-width:640px;
在body加上一个 position: relative;
表示子元素定位以body为基准
效果好一点
***************************************************************************

相对于自身偏移50%
 transform: translate(-50%);
 
***************************************************************************

first-of-type 意思是: 第一个li元素的左外边距设置为0
        #aaa #first_ul li:first-of-type{
            margin-left: 0;
		}


***************************************************************************


css使用padding-left导致input框变长:

查代码发现，取消了padding-left：20px；之后就正常了。

		解决方式，

		1.改成缩进即可，text-indent:20px;



***************************************************************************


name 属性规定 input 元素的名称。

name 属性用于对提交到服务器后的表单数据进行标识


***************************************************************************

css 文字超出部分, 用省略号来代替...
        #test2{
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 6;      /* 你想要文字有多少行号, 2行就填写2   */
            overflow: hidden;
            width: 250px;
            border: 1px solid red;
            font-size: 30px;
        }		
		<div id="test2">asdasd阿斯打扫打扫大三大sd阿斯顿啊sd阿斯顿阿斯顿as大sd阿斯顿as大sd阿斯顿as的阿斯顿阿斯顿as答案是的阿斯顿</div>



***************************************************************************


css 
	强制不换行:
		 white-space: nowrap;  /*强制不换行*/
		 
		 
          display: -webkit-box;
          -webkit-box-orient: vertical;
          -webkit-line-clamp: 2; /* 你想要文字有多少行号, 2行就填写2   */
          overflow: hidden;
		  
		  
注意:  firefox没有 -webkit-line-clamp: 2; 这个东西. 
	只能用下面这个方案了, 将就一下把, 毕竟天猫都是这么做的....
		  功能: 超出一行, 用省略号来代替(...)
			  font-size: 16px;
			  line-height: 18px;
			  color: #333;
			  height: 18px;
			  overflow: hidden;
			  text-overflow: ellipsis;
			  white-space: nowrap;		  


***************************************************************************


苹果 safari 浏览器 input 获取焦点:
  -webkit-user-select: text



***************************************************************************


换行:
	word-wrap:break-word;



***************************************************************************

一个行内元素, 如果想设置宽高, 需要转换成块级元素, 
三种办法:
	display: block;
	float: **;
	position:**;


***************************************************************************

text-align: center; 用来居中详解
--------------------------------------------------------------------------------
当父元素是块级元素(比如div之类), 
	1-1.子元素是内联元素(span之类)的时候:
		text-align: center 加在内联元素上面, 是不起作用的, 
		必须加在父元素上

	1-2.但是子元素是块级元素的时候:
		text-align:center 加在父元素上, 或者子元素上, 都是可以的

		
margin: 0 auto; 用来居中详解:
默认父元素是块级元素(div之类的):
	1-1.子元素是内联元素(span之类):
		加 margin: 0 auto 是不起作用的
		
	1-2.子元素是块级元素(div之类的):
		 margin: 0 auto; 也是不起作用的(除非设置宽和高)



***************************************************************************


居中:
justify-content: center;
text-align: center;
align-items: center;

***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************





***************************************************************************







